import {
    Button,
    HorizontalBox,
    VerticalBox,
    AboutSlint,
    TextEdit,
    LineEdit
} from "std-widgets.slint";

import "./assets/Frutiger.ttf";

export component AppWindow inherits Window {
    in-out property<bool> createLoginShow : false;
    in-out property<bool> welcomeShow : true;
    in-out property<length> Width : 799px;
    in-out property<length> Height : 699px;
    in-out property<string> labelDoNotMatch : "Repeat password:";
    in-out property<string> loginName;
    in-out property<string> loginPsswd;
    in-out property<string> loginRepPsswd;
    in-out property<int> backDeg : 0;
    callback createLogin();

    width <=> root.Width;
    height <=> root.Height;

    background: @linear-gradient(backDeg * -1deg, #02521e, #001f3e);
    title: "Torizon on WSL 2";

    default-font-family: "Frutiger";

    TouchArea {
        pointer-event => {
            backDeg = ((self.mouse-x / self.height) * 180);
        }
    }

    VerticalBox {
        alignment: LayoutAlignment.center;
        spacing: 10px;

        HorizontalLayout {
            alignment: LayoutAlignment.center;

            logo := Image {
                source: @image-url("./assets/torizon.png");
                width: 280px;
                height: 280px;

                animate height {
                    duration: 500ms;
                    easing: ease-in-out;
                }

                animate width {
                    duration: 500ms;
                    easing: ease-in-out;
                }
            }
        }

        HorizontalBox {
            alignment: LayoutAlignment.center;
            padding-bottom: -60px;

            Text {
                text: "WELCOME\n";
                font-size: 70px;
                font-weight: 600;
                font-family: "Frutiger";
                color: #f3f3f3;
            }
        }

        HorizontalBox {
            alignment: LayoutAlignment.center;

            message2 := Text {
                text: "TO TORIZON DEVELOPMENT ENVIRONMENT FOR WSL 2";
                font-size: 20px;
                font-weight: 600;
                font-family: "Frutiger";
                color: #f3f3f3;
            }
        }

        if (welcomeShow) :
            Rectangle {
                //background: #f2f2f2;
                border-radius: 20px;
                height: 200px;

                VerticalLayout {
                    alignment: LayoutAlignment.center;
                    spacing: 50px;
                    padding: 20px;

                    Text {
                        horizontal-alignment: TextHorizontalAlignment.center;
                        font-size: 20px;
                        wrap: TextWrap.word-wrap;
                        text: "First we need to create a new user name and password to configure your new Torizon Development Environment for WSL 2:";
                        font-family: "Frutiger";
                    }

                    Button {
                        height: 40px;
                        text: "LET'S GO!";

                        clicked => {
                            createLoginShow = true;
                            welcomeShow = false;
                            logo.width = 180px;
                            logo.height = 180px;
                        }
                    }
                }
            }

        if (createLoginShow) :
            VerticalLayout {
                alignment: LayoutAlignment.center;
                padding-top: 30px;
                spacing: 10px;

                HorizontalLayout {
                    x: userInput.x;
                    alignment: LayoutAlignment.start;

                    Text {
                        text: "New user name:";
                        font-size: 15px;
                        font-family: "Frutiger";
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    userInput := LineEdit {
                        width: 400px;
                        height: 40px;
                        text <=> loginName;
                    }
                }

                HorizontalLayout {
                    x: userPsswd.x;
                    alignment: LayoutAlignment.start;

                    Text {
                        text: "New Password:";
                        font-size: 15px;
                        font-family: "Frutiger";
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    userPsswd := LineEdit {
                        input-type: InputType.password;
                        width: 400px;
                        height: 40px;
                        text <=> loginPsswd;
                        edited => {
                            if (loginPsswd != loginRepPsswd) {
                                labelDoNotMatch = "Repeat password (do not match):";
                                labelRepead.color = #aa0e0e;
                            } else {
                                labelDoNotMatch = "Repeat password (ok):";
                                labelRepead.color = #145c12;
                            }
                        }
                    }
                }

                HorizontalLayout {
                    x: userRepPsswd.x;
                    alignment: LayoutAlignment.start;

                    labelRepead := Text {
                        text: labelDoNotMatch;
                        font-size: 15px;
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    userRepPsswd := LineEdit {
                        input-type: InputType.password;
                        width: 400px;
                        height: 40px;
                        text <=> loginRepPsswd;
                        edited => {
                            if (loginPsswd != loginRepPsswd) {
                                labelDoNotMatch = "Repeat password (do not match):";
                                labelRepead.color = #aa0e0e;
                            } else {
                                labelDoNotMatch = "Repeat password (ok):";
                                labelRepead.color = #145c12;
                            }
                        }
                    }
                }

                HorizontalLayout {
                    alignment: LayoutAlignment.center;

                    Button {
                        text: "CREATE USER";
                        primary: true;
                        width: 300px;
                        height: 40px;
                        enabled: loginPsswd != "" && loginRepPsswd != "" && loginPsswd == loginRepPsswd;
                        clicked => {
                            if (
                                loginPsswd != "" && loginRepPsswd != "" && loginPsswd == loginRepPsswd
                            ) {
                                createLoginShow = false;
                                message2.text = "PLEASE WAIT ...";
                                logo.width = 380px;
                                logo.height = 380px;
                                root.createLogin();
                            }
                        }
                    }
                }
            }
    }
}
